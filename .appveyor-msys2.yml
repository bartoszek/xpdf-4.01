version: 1.0.{build}

#msys provides `pacman` packge manager and uses mingw-w64-toolchain https://github.com/frankmorgner/openpace/blob/master/appveyor.yml

image:
  - Visual Studio 2017

branches:
  only:
    - master

shallow_clone: true

clone_depth: 1

environment:
  global:
    MSYSTEM: MSYS
    sh: C:\msys64\usr\bin\sh -lc
    pac_arg: -S --needed --noconfirm --noprogressbar
  matrix:
    - MINGW: mingw32
      MBITS: 32
      MPREF: i #i686
    - MINGW: mingw64
      MBITS: 64
      MPREF: x #x86_64

#environment:
#  matrix:
##   - mingw_prefix: mingw-w64-i686
##   - mingw_prefix: mingw-w64-x86_64
#    - pb: i #for   i686 packages
#    - pb: x #for x86_64 packages

matrix:
  fast_finish: true

install:
  - set PATH=%PATH%;C:\msys64\bin
  - call %sh% "pacman -Syuu --noconfirm"
  - call %sh% "pacman -Suu --noconfirm"

before_build:
  - call %sh% "pacman -S --noconfirm cmake"
# - call %sh% "pacman -S --noconfirm %mingw_prefix%-qt5"
# - call %sh% "pacman -S --noconfirm %mingw_prefix%-quazip"
# - call %sh% "pacman -S --noconfirm %mingw_prefix%-poppler"
  - call %sh% "pacboy -S --noconfirm qt5:%pb%"
  - call %sh% "pacboy -S --noconfirm quazip:%pb%"
  - call %sh% "pacboy -S --noconfirm poppler:%pb%"

build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - mkdir -p build
  - cd build
  - call %sh% "cmake -Wno-dev -DPREFIX=../install .."
  - call %sh% "make install"

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - 7z a install.zip install

artifacts:
  - path: install.zip
    name: xpdf-%MINGW%
cache: 
